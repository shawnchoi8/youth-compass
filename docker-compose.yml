services:
  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: youth-compass-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-youth_compass}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-adminpassword}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - youth-compass-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-youth_compass}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Spring Boot backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: youth-compass-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-youth_compass}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-admin}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-adminpassword}
      AI_SERVICE_URL: http://ai-service:8000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - youth-compass-network
    restart: unless-stopped

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: youth-compass-chromadb
    ports:
      - "8001:8000"
    volumes:
      - chroma-data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
    networks:
      - youth-compass-network
    restart: unless-stopped

  # AI-service (FastAPI)
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: youth-compass-ai
    ports:
      - "8000:8000"
    environment:
      UPSTAGE_API_KEY: ${UPSTAGE_API_KEY}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-adminpassword}@postgres:5432/${POSTGRES_DB:-youth_compass}
      BACKEND_URL: http://backend:8080
      CHROMA_HOST: chromadb
      CHROMA_PORT: 8000
      ENVIRONMENT: ${ENVIRONMENT:-development}
    volumes:
      - ./ai-service/data/documents:/app/data/documents
    depends_on:
      - chromadb
    networks:
      - youth-compass-network
    restart: unless-stopped

  # frontend (React + Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
        VITE_SUPABASE_PUBLISHABLE_KEY: ${VITE_SUPABASE_PUBLISHABLE_KEY}
        VITE_SUPABASE_PROJECT_ID: ${VITE_SUPABASE_PROJECT_ID}
    container_name: youth-compass-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
      - ai-service
    networks:
      - youth-compass-network
    restart: unless-stopped

volumes:
  postgres-data:
    name: youth-compass-postgres-data
  chroma-data:
    name: youth-compass-chroma-data

networks:
  youth-compass-network:
    name: youth-compass-network
    driver: bridge